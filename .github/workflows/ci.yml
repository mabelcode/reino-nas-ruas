name: CI/CD Pipeline

on:
  pull_request:
    paths-ignore:
      - '**/*.md'
      - 'README.md'
      - 'docs/**'
  push:
    branches: [main]
    paths-ignore:
      - '**/*.md'
      - 'README.md'
      - 'docs/**'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run lint
      - run: npm run type-check

  unit_tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm test
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # e2e_tests:
  #   runs-on: ubuntu-latest
  #   needs: unit_tests
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 20
  #         cache: 'npm'
  #     - run: npm ci
  #     - run: npx playwright install --with-deps
  #     - run: npm run e2e

  build:
    runs-on: ubuntu-latest
    needs: unit_tests
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - name: Build size check
        run: |
          echo "Build completed successfully"
          echo "Build size: $(du -sh .next | cut -f1)"
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: .next/
          retention-days: 1
